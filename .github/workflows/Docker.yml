name: CI Pipeline

on:
  push:
    branches: [ "feature" ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build_and_scan:
    name: Build, Scan, and Push Docker Image
    runs-on: ubuntu-20.04

    steps:
      - name: Check Out Source Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
        
      - name: Build Docker Image
        run: ./mvnw spring-boot:build-image
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CR_Username }}
          password: ${{ secrets.CR_Password }}
          registry: ghcr.io

      - name: Tag Docker Image
        run: |
          docker tag docker.io/library/spring-petclinic:3.3.0-SNAPSHOT ghcr.io/sachinmaniyar/spring-petclinic:latest

      - name: Push Docker Image
        run: |
          docker push ghcr.io/sachinmaniyar/spring-petclinic:latest

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'ghcr.io/sachinmaniyar/spring-petclinic:latest'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  sign:
    name: Sign Container Image
    runs-on: ubuntu-latest
    needs: build_and_scan

    steps:
      - name: Check Out Source Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CR_Username }}
          password: ${{ secrets.CR_Password }}
          registry: ghcr.io
      - name: Install Cosign CLI
        run: |

          curl -sSL -o /usr/local/bin/cosign https://github.com/sigstore/cosign/releases/download/v2.1.1/cosign-linux-amd64
          chmod +x /usr/local/bin/cosign
          cosign version

      - name: Create Decrypted Signing Key File
        run: |
          echo "${{ secrets.COSIGN_KEY }}" > cosign.key
          
      - name: Sign Docker Image with Cosign
        run: |
          cosign sign --key cosign.key ghcr.io/sachinmaniyar/spring-petclinic:latest
  verify:
    name: Verify Container Image
    runs-on: ubuntu-latest
    needs: sign

    steps:
      - name: Create Public Key File_
        run: echo "${{ secrets.COSIGN_KEY_PR }}" > cosign.pub
      - name: Verify Docker Image Signature
        run: |
          cosign verify --key ${{ secrets.COSIGN_KEY }} ghcr.io/sachinmaniyar/spring-petclinic:latest
